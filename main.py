# Dependencies
import time, logging
import src.DAQ as daq

logger = logging.getLogger(__name__)

cmds = [
    0xB5,0x62,0x06,0x08,0x06,0x00,0x64,0x00,0x01,0x00,0x01,0x00,0x7A,0x12, # 10 Hz
    0xB5,0x62,0x06,0x01,0x08,0x00,0xF0,0x01,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x2B, # GxGLL off
    0xB5,0x62,0x06,0x01,0x08,0x00,0xF0,0x02,0x00,0x00,0x00,0x00,0x00,0x01,0x02,0x32, # GxGSA off
    0xB5,0x62,0x06,0x01,0x08,0x00,0xF0,0x03,0x00,0x00,0x00,0x00,0x00,0x01,0x03,0x39, # GxGSV off
    0xB5,0x62,0x06,0x01,0x08,0x00,0xF0,0x04,0x00,0x00,0x00,0x00,0x00,0x01,0x04,0x40, # GxRMC off
    0xB5,0x62,0x06,0x01,0x08,0x00,0xF0,0x05,0x00,0x00,0x00,0x00,0x00,0x01,0x05,0x47  # GxVTG off
]

def main():
    initLogger(format='[ %(asctime)s %(funcName)20s() ] %(message)s')
    DAQ = daq.DAQ(logger)
    DAQ.loadConfig('cfg/config.ini')
    DAQ.initI2C()
    DAQ.initSensors()
    DAQ.sendCommandToGPS(cmds)

    prevTime = 0
    sampleRate = 100 # Hz
    dt = 1 / sampleRate # Seconds
    while True:
        try:
            accel = DAQ.getAccel()
            gyro = DAQ.getGyro()
            mag = DAQ.getMag()
            temp = DAQ.getTemperature()
            pressure = DAQ.getPressure()
            altitude = DAQ.getAltitudeBMP280()
        except Exception as ex:
            self.logger.debug("Failure while fetching data from DAQ!")
            raise ex

        # Wait for next sample period
        while time.time() - prevTime < dt:
            pass

        prevTime = time.time()

def initLogger(format):
    logging.basicConfig(format=format)
    logger.setLevel(logging.DEBUG)

if __name__ == "__main__":
    main()